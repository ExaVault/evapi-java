/*
 * ExaVault API
 * See our API reference documentation at https://www.exavault.com/developer/api-docs/
 *
 * OpenAPI spec version: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.exavault.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Body8
 */


public class Body8 {
  @SerializedName("path")
  private String path = null;

  @SerializedName("folderName")
  private String folderName = null;

  @SerializedName("parentResource")
  private String parentResource = null;

  public Body8 path(String path) {
    this.path = path;
    return this;
  }

   /**
   * Path to the newly created folder including new ame
   * @return path
  **/
  @Schema(description = "Path to the newly created folder including new ame")
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }

  public Body8 folderName(String folderName) {
    this.folderName = folderName;
    return this;
  }

   /**
   * Name of the folder to create. Required if **path** is not used
   * @return folderName
  **/
  @Schema(description = "Name of the folder to create. Required if **path** is not used")
  public String getFolderName() {
    return folderName;
  }

  public void setFolderName(String folderName) {
    this.folderName = folderName;
  }

  public Body8 parentResource(String parentResource) {
    this.parentResource = parentResource;
    return this;
  }

   /**
   * Resource identifier where to create a folder. Required if **path** is not used
   * @return parentResource
  **/
  @Schema(description = "Resource identifier where to create a folder. Required if **path** is not used")
  public String getParentResource() {
    return parentResource;
  }

  public void setParentResource(String parentResource) {
    this.parentResource = parentResource;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Body8 body8 = (Body8) o;
    return Objects.equals(this.path, body8.path) &&
        Objects.equals(this.folderName, body8.folderName) &&
        Objects.equals(this.parentResource, body8.parentResource);
  }

  @Override
  public int hashCode() {
    return Objects.hash(path, folderName, parentResource);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Body8 {\n");
    
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    folderName: ").append(toIndentedString(folderName)).append("\n");
    sb.append("    parentResource: ").append(toIndentedString(parentResource)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
