/*
 * ExaVault API
 * See our API reference documentation at https://www.exavault.com/developer/api-docs/
 *
 * OpenAPI spec version: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.exavault.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.exavault.client.model.CallbackSettingsTriggers;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * CallbackSettings
 */


public class CallbackSettings {
  @SerializedName("accountId")
  private String accountId = null;

  @SerializedName("endpointUrl")
  private String endpointUrl = null;

  @SerializedName("token")
  private String token = null;

  @SerializedName("triggers")
  private CallbackSettingsTriggers triggers = null;

  public CallbackSettings accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * ID of the account these settings belongs to.
   * @return accountId
  **/
  @Schema(example = "13058", description = "ID of the account these settings belongs to.")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public CallbackSettings endpointUrl(String endpointUrl) {
    this.endpointUrl = endpointUrl;
    return this;
  }

   /**
   * Where callback settings object sent to.
   * @return endpointUrl
  **/
  @Schema(example = "http://test-endpoint.exavault.com", description = "Where callback settings object sent to.")
  public String getEndpointUrl() {
    return endpointUrl;
  }

  public void setEndpointUrl(String endpointUrl) {
    this.endpointUrl = endpointUrl;
  }

  public CallbackSettings token(String token) {
    this.token = token;
    return this;
  }

   /**
   * Verification token for the request authentication.
   * @return token
  **/
  @Schema(example = "380814daa6886641d2ffsw2f43b30312", description = "Verification token for the request authentication.")
  public String getToken() {
    return token;
  }

  public void setToken(String token) {
    this.token = token;
  }

  public CallbackSettings triggers(CallbackSettingsTriggers triggers) {
    this.triggers = triggers;
    return this;
  }

   /**
   * Get triggers
   * @return triggers
  **/
  @Schema(description = "")
  public CallbackSettingsTriggers getTriggers() {
    return triggers;
  }

  public void setTriggers(CallbackSettingsTriggers triggers) {
    this.triggers = triggers;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CallbackSettings callbackSettings = (CallbackSettings) o;
    return Objects.equals(this.accountId, callbackSettings.accountId) &&
        Objects.equals(this.endpointUrl, callbackSettings.endpointUrl) &&
        Objects.equals(this.token, callbackSettings.token) &&
        Objects.equals(this.triggers, callbackSettings.triggers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, endpointUrl, token, triggers);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CallbackSettings {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    endpointUrl: ").append(toIndentedString(endpointUrl)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    triggers: ").append(toIndentedString(triggers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
