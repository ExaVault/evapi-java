/*
 * ExaVault API
 * See our API reference documentation at https://www.exavault.com/developer/api-docs/
 *
 * OpenAPI spec version: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.exavault.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * An object defining what a not-logged-in visitor can do with the share contents
 */
@Schema(description = "An object defining what a not-logged-in visitor can do with the share contents")

public class AccessMode {
  @SerializedName("download")
  private Boolean download = null;

  @SerializedName("upload")
  private Boolean upload = null;

  @SerializedName("modify")
  private Boolean modify = null;

  @SerializedName("delete")
  private Boolean delete = null;

  public AccessMode download(Boolean download) {
    this.download = download;
    return this;
  }

   /**
   * Whether share allows visitors to download
   * @return download
  **/
  @Schema(description = "Whether share allows visitors to download")
  public Boolean isDownload() {
    return download;
  }

  public void setDownload(Boolean download) {
    this.download = download;
  }

  public AccessMode upload(Boolean upload) {
    this.upload = upload;
    return this;
  }

   /**
   * Whether share allows visitors to upload
   * @return upload
  **/
  @Schema(description = "Whether share allows visitors to upload")
  public Boolean isUpload() {
    return upload;
  }

  public void setUpload(Boolean upload) {
    this.upload = upload;
  }

  public AccessMode modify(Boolean modify) {
    this.modify = modify;
    return this;
  }

   /**
   * Whether share allows visitors to rename or move contents.
   * @return modify
  **/
  @Schema(description = "Whether share allows visitors to rename or move contents.")
  public Boolean isModify() {
    return modify;
  }

  public void setModify(Boolean modify) {
    this.modify = modify;
  }

  public AccessMode delete(Boolean delete) {
    this.delete = delete;
    return this;
  }

   /**
   * Whether share allows visitors to delete contents
   * @return delete
  **/
  @Schema(description = "Whether share allows visitors to delete contents")
  public Boolean isDelete() {
    return delete;
  }

  public void setDelete(Boolean delete) {
    this.delete = delete;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccessMode accessMode = (AccessMode) o;
    return Objects.equals(this.download, accessMode.download) &&
        Objects.equals(this.upload, accessMode.upload) &&
        Objects.equals(this.modify, accessMode.modify) &&
        Objects.equals(this.delete, accessMode.delete);
  }

  @Override
  public int hashCode() {
    return Objects.hash(download, upload, modify, delete);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccessMode {\n");
    
    sb.append("    download: ").append(toIndentedString(download)).append("\n");
    sb.append("    upload: ").append(toIndentedString(upload)).append("\n");
    sb.append("    modify: ").append(toIndentedString(modify)).append("\n");
    sb.append("    delete: ").append(toIndentedString(delete)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
