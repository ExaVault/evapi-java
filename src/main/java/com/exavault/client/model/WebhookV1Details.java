/*
 * ExaVault API
 * See our API reference documentation at https://www.exavault.com/developer/api-docs/
 *
 * OpenAPI spec version: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.exavault.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * WebhookV1Details
 */


public class WebhookV1Details {
  @SerializedName("attemptId")
  private String attemptId = null;

  @SerializedName("accountName")
  private String accountName = null;

  @SerializedName("protocol")
  private String protocol = null;

  @SerializedName("username")
  private String username = null;

  @SerializedName("event")
  private String event = null;

  @SerializedName("attempt")
  private Integer attempt = null;

  public WebhookV1Details attemptId(String attemptId) {
    this.attemptId = attemptId;
    return this;
  }

   /**
   * Entry - retry identifier
   * @return attemptId
  **/
  @Schema(description = "Entry - retry identifier")
  public String getAttemptId() {
    return attemptId;
  }

  public void setAttemptId(String attemptId) {
    this.attemptId = attemptId;
  }

  public WebhookV1Details accountName(String accountName) {
    this.accountName = accountName;
    return this;
  }

   /**
   * Account master username
   * @return accountName
  **/
  @Schema(description = "Account master username")
  public String getAccountName() {
    return accountName;
  }

  public void setAccountName(String accountName) {
    this.accountName = accountName;
  }

  public WebhookV1Details protocol(String protocol) {
    this.protocol = protocol;
    return this;
  }

   /**
   * Type of connection used for related activity
   * @return protocol
  **/
  @Schema(description = "Type of connection used for related activity")
  public String getProtocol() {
    return protocol;
  }

  public void setProtocol(String protocol) {
    this.protocol = protocol;
  }

  public WebhookV1Details username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Username logged for related activity. May refer to someone who is not a user of the account, such as a share recipient or \&quot;publ
   * @return username
  **/
  @Schema(description = "Username logged for related activity. May refer to someone who is not a user of the account, such as a share recipient or \"publ")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public WebhookV1Details event(String event) {
    this.event = event;
    return this;
  }

   /**
   * Type of related activity
   * @return event
  **/
  @Schema(description = "Type of related activity")
  public String getEvent() {
    return event;
  }

  public void setEvent(String event) {
    this.event = event;
  }

  public WebhookV1Details attempt(Integer attempt) {
    this.attempt = attempt;
    return this;
  }

   /**
   * Number of times the system has attempted to send
   * @return attempt
  **/
  @Schema(description = "Number of times the system has attempted to send")
  public Integer getAttempt() {
    return attempt;
  }

  public void setAttempt(Integer attempt) {
    this.attempt = attempt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebhookV1Details webhookV1Details = (WebhookV1Details) o;
    return Objects.equals(this.attemptId, webhookV1Details.attemptId) &&
        Objects.equals(this.accountName, webhookV1Details.accountName) &&
        Objects.equals(this.protocol, webhookV1Details.protocol) &&
        Objects.equals(this.username, webhookV1Details.username) &&
        Objects.equals(this.event, webhookV1Details.event) &&
        Objects.equals(this.attempt, webhookV1Details.attempt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attemptId, accountName, protocol, username, event, attempt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebhookV1Details {\n");
    
    sb.append("    attemptId: ").append(toIndentedString(attemptId)).append("\n");
    sb.append("    accountName: ").append(toIndentedString(accountName)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    event: ").append(toIndentedString(event)).append("\n");
    sb.append("    attempt: ").append(toIndentedString(attempt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
