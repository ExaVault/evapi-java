/*
 * ExaVault API
 * See our API reference documentation at https://www.exavault.com/developer/api-docs/
 *
 * OpenAPI spec version: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.exavault.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.exavault.client.model.ResourceRelationshipsDirectFile;
import com.exavault.client.model.ResourceRelationshipsNotifications;
import com.exavault.client.model.ResourceRelationshipsParentResource;
import com.exavault.client.model.ResourceRelationshipsShare;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * ResourceRelationships
 */


public class ResourceRelationships {
  @SerializedName("share")
  private ResourceRelationshipsShare share = null;

  @SerializedName("notifications")
  private List<ResourceRelationshipsNotifications> notifications = null;

  @SerializedName("directFile")
  private ResourceRelationshipsDirectFile directFile = null;

  @SerializedName("parentResource")
  private ResourceRelationshipsParentResource parentResource = null;

  public ResourceRelationships share(ResourceRelationshipsShare share) {
    this.share = share;
    return this;
  }

   /**
   * Get share
   * @return share
  **/
  @Schema(description = "")
  public ResourceRelationshipsShare getShare() {
    return share;
  }

  public void setShare(ResourceRelationshipsShare share) {
    this.share = share;
  }

  public ResourceRelationships notifications(List<ResourceRelationshipsNotifications> notifications) {
    this.notifications = notifications;
    return this;
  }

  public ResourceRelationships addNotificationsItem(ResourceRelationshipsNotifications notificationsItem) {
    if (this.notifications == null) {
      this.notifications = new ArrayList<ResourceRelationshipsNotifications>();
    }
    this.notifications.add(notificationsItem);
    return this;
  }

   /**
   * Get notifications
   * @return notifications
  **/
  @Schema(description = "")
  public List<ResourceRelationshipsNotifications> getNotifications() {
    return notifications;
  }

  public void setNotifications(List<ResourceRelationshipsNotifications> notifications) {
    this.notifications = notifications;
  }

  public ResourceRelationships directFile(ResourceRelationshipsDirectFile directFile) {
    this.directFile = directFile;
    return this;
  }

   /**
   * Get directFile
   * @return directFile
  **/
  @Schema(description = "")
  public ResourceRelationshipsDirectFile getDirectFile() {
    return directFile;
  }

  public void setDirectFile(ResourceRelationshipsDirectFile directFile) {
    this.directFile = directFile;
  }

  public ResourceRelationships parentResource(ResourceRelationshipsParentResource parentResource) {
    this.parentResource = parentResource;
    return this;
  }

   /**
   * Get parentResource
   * @return parentResource
  **/
  @Schema(description = "")
  public ResourceRelationshipsParentResource getParentResource() {
    return parentResource;
  }

  public void setParentResource(ResourceRelationshipsParentResource parentResource) {
    this.parentResource = parentResource;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResourceRelationships resourceRelationships = (ResourceRelationships) o;
    return Objects.equals(this.share, resourceRelationships.share) &&
        Objects.equals(this.notifications, resourceRelationships.notifications) &&
        Objects.equals(this.directFile, resourceRelationships.directFile) &&
        Objects.equals(this.parentResource, resourceRelationships.parentResource);
  }

  @Override
  public int hashCode() {
    return Objects.hash(share, notifications, directFile, parentResource);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResourceRelationships {\n");
    
    sb.append("    share: ").append(toIndentedString(share)).append("\n");
    sb.append("    notifications: ").append(toIndentedString(notifications)).append("\n");
    sb.append("    directFile: ").append(toIndentedString(directFile)).append("\n");
    sb.append("    parentResource: ").append(toIndentedString(parentResource)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
