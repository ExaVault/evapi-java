/*
 * ExaVault API
 * See our API reference documentation at https://www.exavault.com/developer/api-docs/
 *
 * OpenAPI spec version: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.exavault.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Body12
 */


public class Body12 {
  @SerializedName("resources")
  private List<String> resources = new ArrayList<String>();

  @SerializedName("parentResource")
  private String parentResource = null;

  public Body12 resources(List<String> resources) {
    this.resources = resources;
    return this;
  }

  public Body12 addResourcesItem(String resourcesItem) {
    this.resources.add(resourcesItem);
    return this;
  }

   /**
   * Resource identifier(s) of items to be copied to a new location
   * @return resources
  **/
  @Schema(required = true, description = "Resource identifier(s) of items to be copied to a new location")
  public List<String> getResources() {
    return resources;
  }

  public void setResources(List<String> resources) {
    this.resources = resources;
  }

  public Body12 parentResource(String parentResource) {
    this.parentResource = parentResource;
    return this;
  }

   /**
   * Resource identifier for folder where items will be copied to.
   * @return parentResource
  **/
  @Schema(required = true, description = "Resource identifier for folder where items will be copied to.")
  public String getParentResource() {
    return parentResource;
  }

  public void setParentResource(String parentResource) {
    this.parentResource = parentResource;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Body12 body12 = (Body12) o;
    return Objects.equals(this.resources, body12.resources) &&
        Objects.equals(this.parentResource, body12.parentResource);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resources, parentResource);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Body12 {\n");
    
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    parentResource: ").append(toIndentedString(parentResource)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
