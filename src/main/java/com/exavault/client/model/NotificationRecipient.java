/*
 * ExaVault API
 * See our API reference documentation at https://www.exavault.com/developer/api-docs/
 *
 * OpenAPI spec version: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.exavault.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * NotificationRecipient
 */


public class NotificationRecipient {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("notificationId")
  private Integer notificationId = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("created")
  private OffsetDateTime created = null;

  @SerializedName("modified")
  private OffsetDateTime modified = null;

  public NotificationRecipient id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * ID of the recipient.
   * @return id
  **/
  @Schema(example = "2", description = "ID of the recipient.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public NotificationRecipient notificationId(Integer notificationId) {
    this.notificationId = notificationId;
    return this;
  }

   /**
   * ID of the notification that the recipient belongs to.
   * @return notificationId
  **/
  @Schema(example = "23", description = "ID of the notification that the recipient belongs to.")
  public Integer getNotificationId() {
    return notificationId;
  }

  public void setNotificationId(Integer notificationId) {
    this.notificationId = notificationId;
  }

  public NotificationRecipient email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Recipient email.
   * @return email
  **/
  @Schema(example = "exampleuser@example.com", description = "Recipient email.")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public NotificationRecipient created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * Timestamp of adding notification recipient.
   * @return created
  **/
  @Schema(example = "2011-03-21T00:18:56Z", description = "Timestamp of adding notification recipient.")
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public NotificationRecipient modified(OffsetDateTime modified) {
    this.modified = modified;
    return this;
  }

   /**
   * Timestamp of notification recipient modification.
   * @return modified
  **/
  @Schema(example = "2011-03-21T00:18:56Z", description = "Timestamp of notification recipient modification.")
  public OffsetDateTime getModified() {
    return modified;
  }

  public void setModified(OffsetDateTime modified) {
    this.modified = modified;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NotificationRecipient notificationRecipient = (NotificationRecipient) o;
    return Objects.equals(this.id, notificationRecipient.id) &&
        Objects.equals(this.notificationId, notificationRecipient.notificationId) &&
        Objects.equals(this.email, notificationRecipient.email) &&
        Objects.equals(this.created, notificationRecipient.created) &&
        Objects.equals(this.modified, notificationRecipient.modified);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, notificationId, email, created, modified);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NotificationRecipient {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    notificationId: ").append(toIndentedString(notificationId)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
