/*
 * ExaVault API
 * See our API reference documentation at https://www.exavault.com/developer/api-docs/
 *
 * OpenAPI spec version: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.exavault.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * AccountQuotaValues
 */


public class AccountQuotaValues {
  @SerializedName("noticeEnabled")
  private Boolean noticeEnabled = null;

  @SerializedName("noticeThreshold")
  private Integer noticeThreshold = null;

  @SerializedName("transactionsNoticeEnabled")
  private Boolean transactionsNoticeEnabled = null;

  @SerializedName("transactionsNoticeThreshold")
  private Integer transactionsNoticeThreshold = null;

  public AccountQuotaValues noticeEnabled(Boolean noticeEnabled) {
    this.noticeEnabled = noticeEnabled;
    return this;
  }

   /**
   * Whether the system should email the account owner if the account storage exceeds the noticeThreshold value. Storage notice emails are sent no mo once per day.
   * @return noticeEnabled
  **/
  @Schema(description = "Whether the system should email the account owner if the account storage exceeds the noticeThreshold value. Storage notice emails are sent no mo once per day.")
  public Boolean isNoticeEnabled() {
    return noticeEnabled;
  }

  public void setNoticeEnabled(Boolean noticeEnabled) {
    this.noticeEnabled = noticeEnabled;
  }

  public AccountQuotaValues noticeThreshold(Integer noticeThreshold) {
    this.noticeThreshold = noticeThreshold;
    return this;
  }

   /**
   * Percent of account storage that would trigger a notice email. Must be a whole number between 70 and 100 (inclusive).
   * @return noticeThreshold
  **/
  @Schema(description = "Percent of account storage that would trigger a notice email. Must be a whole number between 70 and 100 (inclusive).")
  public Integer getNoticeThreshold() {
    return noticeThreshold;
  }

  public void setNoticeThreshold(Integer noticeThreshold) {
    this.noticeThreshold = noticeThreshold;
  }

  public AccountQuotaValues transactionsNoticeEnabled(Boolean transactionsNoticeEnabled) {
    this.transactionsNoticeEnabled = transactionsNoticeEnabled;
    return this;
  }

   /**
   * Whether the system should email the account owner if the daily transaction usage exceeds the transactionsNoticeThreshold value. Transaction notice emails are sent no more than once per day.
   * @return transactionsNoticeEnabled
  **/
  @Schema(description = "Whether the system should email the account owner if the daily transaction usage exceeds the transactionsNoticeThreshold value. Transaction notice emails are sent no more than once per day.")
  public Boolean isTransactionsNoticeEnabled() {
    return transactionsNoticeEnabled;
  }

  public void setTransactionsNoticeEnabled(Boolean transactionsNoticeEnabled) {
    this.transactionsNoticeEnabled = transactionsNoticeEnabled;
  }

  public AccountQuotaValues transactionsNoticeThreshold(Integer transactionsNoticeThreshold) {
    this.transactionsNoticeThreshold = transactionsNoticeThreshold;
    return this;
  }

   /**
   * Percent of daily transaction usage that would trigger a notice email. Must be a whole number between 70 and 100 (inclusive).
   * @return transactionsNoticeThreshold
  **/
  @Schema(description = "Percent of daily transaction usage that would trigger a notice email. Must be a whole number between 70 and 100 (inclusive).")
  public Integer getTransactionsNoticeThreshold() {
    return transactionsNoticeThreshold;
  }

  public void setTransactionsNoticeThreshold(Integer transactionsNoticeThreshold) {
    this.transactionsNoticeThreshold = transactionsNoticeThreshold;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountQuotaValues accountQuotaValues = (AccountQuotaValues) o;
    return Objects.equals(this.noticeEnabled, accountQuotaValues.noticeEnabled) &&
        Objects.equals(this.noticeThreshold, accountQuotaValues.noticeThreshold) &&
        Objects.equals(this.transactionsNoticeEnabled, accountQuotaValues.transactionsNoticeEnabled) &&
        Objects.equals(this.transactionsNoticeThreshold, accountQuotaValues.transactionsNoticeThreshold);
  }

  @Override
  public int hashCode() {
    return Objects.hash(noticeEnabled, noticeThreshold, transactionsNoticeEnabled, transactionsNoticeThreshold);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountQuotaValues {\n");
    
    sb.append("    noticeEnabled: ").append(toIndentedString(noticeEnabled)).append("\n");
    sb.append("    noticeThreshold: ").append(toIndentedString(noticeThreshold)).append("\n");
    sb.append("    transactionsNoticeEnabled: ").append(toIndentedString(transactionsNoticeEnabled)).append("\n");
    sb.append("    transactionsNoticeThreshold: ").append(toIndentedString(transactionsNoticeThreshold)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
