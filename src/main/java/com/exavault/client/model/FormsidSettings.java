/*
 * ExaVault API
 * See our API reference documentation at https://www.exavault.com/developer/api-docs/
 *
 * OpenAPI spec version: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.exavault.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * FormsidSettings
 */


public class FormsidSettings {
  @SerializedName("isRequired")
  private Boolean isRequired = null;

  @SerializedName("senderEmail")
  private Boolean senderEmail = null;

  @SerializedName("useAsFolderName")
  private Boolean useAsFolderName = null;

  public FormsidSettings isRequired(Boolean isRequired) {
    this.isRequired = isRequired;
    return this;
  }

   /**
   * True is the form element is required for submission. 
   * @return isRequired
  **/
  @Schema(example = "true", description = "True is the form element is required for submission. ")
  public Boolean isIsRequired() {
    return isRequired;
  }

  public void setIsRequired(Boolean isRequired) {
    this.isRequired = isRequired;
  }

  public FormsidSettings senderEmail(Boolean senderEmail) {
    this.senderEmail = senderEmail;
    return this;
  }

   /**
   * Get senderEmail
   * @return senderEmail
  **/
  @Schema(example = "false", description = "")
  public Boolean isSenderEmail() {
    return senderEmail;
  }

  public void setSenderEmail(Boolean senderEmail) {
    this.senderEmail = senderEmail;
  }

  public FormsidSettings useAsFolderName(Boolean useAsFolderName) {
    this.useAsFolderName = useAsFolderName;
    return this;
  }

   /**
   * True if the submitted response should be used as the name for the new folder. 
   * @return useAsFolderName
  **/
  @Schema(example = "false", description = "True if the submitted response should be used as the name for the new folder. ")
  public Boolean isUseAsFolderName() {
    return useAsFolderName;
  }

  public void setUseAsFolderName(Boolean useAsFolderName) {
    this.useAsFolderName = useAsFolderName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FormsidSettings formsidSettings = (FormsidSettings) o;
    return Objects.equals(this.isRequired, formsidSettings.isRequired) &&
        Objects.equals(this.senderEmail, formsidSettings.senderEmail) &&
        Objects.equals(this.useAsFolderName, formsidSettings.useAsFolderName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isRequired, senderEmail, useAsFolderName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FormsidSettings {\n");
    
    sb.append("    isRequired: ").append(toIndentedString(isRequired)).append("\n");
    sb.append("    senderEmail: ").append(toIndentedString(senderEmail)).append("\n");
    sb.append("    useAsFolderName: ").append(toIndentedString(useAsFolderName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
