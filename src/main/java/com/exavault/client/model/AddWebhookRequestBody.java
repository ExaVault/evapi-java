/*
 * ExaVault API
 * See our API reference documentation at https://www.exavault.com/developer/api-docs/
 *
 * OpenAPI spec version: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.exavault.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.exavault.client.model.WebhookTriggers;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * AddWebhookRequestBody
 */


public class AddWebhookRequestBody {
  @SerializedName("endpointUrl")
  private String endpointUrl = null;

  @SerializedName("triggers")
  private WebhookTriggers triggers = null;

  @SerializedName("resource")
  private String resource = null;

  /**
   * What version of webhook request should be sent to the endpoint URL when messages are sent
   */
  @JsonAdapter(ResponseVersionEnum.Adapter.class)
  public enum ResponseVersionEnum {
    V1("v1"),
    V2("v2");

    private String value;

    ResponseVersionEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ResponseVersionEnum fromValue(String text) {
      for (ResponseVersionEnum b : ResponseVersionEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ResponseVersionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ResponseVersionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ResponseVersionEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ResponseVersionEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("responseVersion")
  private ResponseVersionEnum responseVersion = null;

  public AddWebhookRequestBody endpointUrl(String endpointUrl) {
    this.endpointUrl = endpointUrl;
    return this;
  }

   /**
   * The endpoint is where the webhook request will be sent.
   * @return endpointUrl
  **/
  @Schema(example = "https://example.com/webhook", required = true, description = "The endpoint is where the webhook request will be sent.")
  public String getEndpointUrl() {
    return endpointUrl;
  }

  public void setEndpointUrl(String endpointUrl) {
    this.endpointUrl = endpointUrl;
  }

  public AddWebhookRequestBody triggers(WebhookTriggers triggers) {
    this.triggers = triggers;
    return this;
  }

   /**
   * Get triggers
   * @return triggers
  **/
  @Schema(description = "")
  public WebhookTriggers getTriggers() {
    return triggers;
  }

  public void setTriggers(WebhookTriggers triggers) {
    this.triggers = triggers;
  }

  public AddWebhookRequestBody resource(String resource) {
    this.resource = resource;
    return this;
  }

   /**
   * Resource identifier for the top folder this webhook is associated with
   * @return resource
  **/
  @Schema(example = "/uploads-folder", description = "Resource identifier for the top folder this webhook is associated with")
  public String getResource() {
    return resource;
  }

  public void setResource(String resource) {
    this.resource = resource;
  }

  public AddWebhookRequestBody responseVersion(ResponseVersionEnum responseVersion) {
    this.responseVersion = responseVersion;
    return this;
  }

   /**
   * What version of webhook request should be sent to the endpoint URL when messages are sent
   * @return responseVersion
  **/
  @Schema(example = "v2", description = "What version of webhook request should be sent to the endpoint URL when messages are sent")
  public ResponseVersionEnum getResponseVersion() {
    return responseVersion;
  }

  public void setResponseVersion(ResponseVersionEnum responseVersion) {
    this.responseVersion = responseVersion;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddWebhookRequestBody addWebhookRequestBody = (AddWebhookRequestBody) o;
    return Objects.equals(this.endpointUrl, addWebhookRequestBody.endpointUrl) &&
        Objects.equals(this.triggers, addWebhookRequestBody.triggers) &&
        Objects.equals(this.resource, addWebhookRequestBody.resource) &&
        Objects.equals(this.responseVersion, addWebhookRequestBody.responseVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endpointUrl, triggers, resource, responseVersion);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddWebhookRequestBody {\n");
    
    sb.append("    endpointUrl: ").append(toIndentedString(endpointUrl)).append("\n");
    sb.append("    triggers: ").append(toIndentedString(triggers)).append("\n");
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    responseVersion: ").append(toIndentedString(responseVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
