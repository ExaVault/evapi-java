/*
 * ExaVault API
 * See our API reference documentation at https://www.exavault.com/developer/api-docs/
 *
 * OpenAPI spec version: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.exavault.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.exavault.client.model.ShareRelationshipsMessage;
import com.exavault.client.model.ShareRelationshipsNotification;
import com.exavault.client.model.ShareRelationshipsOwner;
import com.exavault.client.model.ShareRelationshipsResource;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Message, owner, resource, and notification relationships of the share. 
 */
@Schema(description = "Message, owner, resource, and notification relationships of the share. ")

public class ShareRelationships {
  @SerializedName("messages")
  private List<ShareRelationshipsMessage> messages = null;

  @SerializedName("owner")
  private ShareRelationshipsOwner owner = null;

  @SerializedName("resources")
  private List<ShareRelationshipsResource> resources = null;

  @SerializedName("notifications")
  private List<ShareRelationshipsNotification> notifications = null;

  public ShareRelationships messages(List<ShareRelationshipsMessage> messages) {
    this.messages = messages;
    return this;
  }

  public ShareRelationships addMessagesItem(ShareRelationshipsMessage messagesItem) {
    if (this.messages == null) {
      this.messages = new ArrayList<ShareRelationshipsMessage>();
    }
    this.messages.add(messagesItem);
    return this;
  }

   /**
   * null
   * @return messages
  **/
  @Schema(description = "null")
  public List<ShareRelationshipsMessage> getMessages() {
    return messages;
  }

  public void setMessages(List<ShareRelationshipsMessage> messages) {
    this.messages = messages;
  }

  public ShareRelationships owner(ShareRelationshipsOwner owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @Schema(description = "")
  public ShareRelationshipsOwner getOwner() {
    return owner;
  }

  public void setOwner(ShareRelationshipsOwner owner) {
    this.owner = owner;
  }

  public ShareRelationships resources(List<ShareRelationshipsResource> resources) {
    this.resources = resources;
    return this;
  }

  public ShareRelationships addResourcesItem(ShareRelationshipsResource resourcesItem) {
    if (this.resources == null) {
      this.resources = new ArrayList<ShareRelationshipsResource>();
    }
    this.resources.add(resourcesItem);
    return this;
  }

   /**
   * Get resources
   * @return resources
  **/
  @Schema(description = "")
  public List<ShareRelationshipsResource> getResources() {
    return resources;
  }

  public void setResources(List<ShareRelationshipsResource> resources) {
    this.resources = resources;
  }

  public ShareRelationships notifications(List<ShareRelationshipsNotification> notifications) {
    this.notifications = notifications;
    return this;
  }

  public ShareRelationships addNotificationsItem(ShareRelationshipsNotification notificationsItem) {
    if (this.notifications == null) {
      this.notifications = new ArrayList<ShareRelationshipsNotification>();
    }
    this.notifications.add(notificationsItem);
    return this;
  }

   /**
   * null
   * @return notifications
  **/
  @Schema(description = "null")
  public List<ShareRelationshipsNotification> getNotifications() {
    return notifications;
  }

  public void setNotifications(List<ShareRelationshipsNotification> notifications) {
    this.notifications = notifications;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShareRelationships shareRelationships = (ShareRelationships) o;
    return Objects.equals(this.messages, shareRelationships.messages) &&
        Objects.equals(this.owner, shareRelationships.owner) &&
        Objects.equals(this.resources, shareRelationships.resources) &&
        Objects.equals(this.notifications, shareRelationships.notifications);
  }

  @Override
  public int hashCode() {
    return Objects.hash(messages, owner, resources, notifications);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShareRelationships {\n");
    
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    notifications: ").append(toIndentedString(notifications)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
