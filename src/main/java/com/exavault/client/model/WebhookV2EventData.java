/*
 * ExaVault API
 * See our API reference documentation at https://www.exavault.com/developer/api-docs/
 *
 * OpenAPI spec version: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.exavault.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.exavault.client.model.WebhookV2EventDataResources;
import com.exavault.client.model.WebhookV2EventDataShare;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * WebhookV2EventData
 */


public class WebhookV2EventData {
  @SerializedName("resources")
  private List<WebhookV2EventDataResources> resources = null;

  @SerializedName("formDetails")
  private List<Object> formDetails = null;

  @SerializedName("share")
  private List<WebhookV2EventDataShare> share = null;

  @SerializedName("transferStatus")
  private String transferStatus = null;

  public WebhookV2EventData resources(List<WebhookV2EventDataResources> resources) {
    this.resources = resources;
    return this;
  }

  public WebhookV2EventData addResourcesItem(WebhookV2EventDataResources resourcesItem) {
    if (this.resources == null) {
      this.resources = new ArrayList<WebhookV2EventDataResources>();
    }
    this.resources.add(resourcesItem);
    return this;
  }

   /**
   * Get resources
   * @return resources
  **/
  @Schema(description = "")
  public List<WebhookV2EventDataResources> getResources() {
    return resources;
  }

  public void setResources(List<WebhookV2EventDataResources> resources) {
    this.resources = resources;
  }

  public WebhookV2EventData formDetails(List<Object> formDetails) {
    this.formDetails = formDetails;
    return this;
  }

  public WebhookV2EventData addFormDetailsItem(Object formDetailsItem) {
    if (this.formDetails == null) {
      this.formDetails = new ArrayList<Object>();
    }
    this.formDetails.add(formDetailsItem);
    return this;
  }

   /**
   * Get formDetails
   * @return formDetails
  **/
  @Schema(description = "")
  public List<Object> getFormDetails() {
    return formDetails;
  }

  public void setFormDetails(List<Object> formDetails) {
    this.formDetails = formDetails;
  }

  public WebhookV2EventData share(List<WebhookV2EventDataShare> share) {
    this.share = share;
    return this;
  }

  public WebhookV2EventData addShareItem(WebhookV2EventDataShare shareItem) {
    if (this.share == null) {
      this.share = new ArrayList<WebhookV2EventDataShare>();
    }
    this.share.add(shareItem);
    return this;
  }

   /**
   * Get share
   * @return share
  **/
  @Schema(description = "")
  public List<WebhookV2EventDataShare> getShare() {
    return share;
  }

  public void setShare(List<WebhookV2EventDataShare> share) {
    this.share = share;
  }

  public WebhookV2EventData transferStatus(String transferStatus) {
    this.transferStatus = transferStatus;
    return this;
  }

   /**
   * For uploads, and downloads, whether the file transferred OK. &#x60;success&#x60; means the transfer did not have errors
   * @return transferStatus
  **/
  @Schema(description = "For uploads, and downloads, whether the file transferred OK. `success` means the transfer did not have errors")
  public String getTransferStatus() {
    return transferStatus;
  }

  public void setTransferStatus(String transferStatus) {
    this.transferStatus = transferStatus;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebhookV2EventData webhookV2EventData = (WebhookV2EventData) o;
    return Objects.equals(this.resources, webhookV2EventData.resources) &&
        Objects.equals(this.formDetails, webhookV2EventData.formDetails) &&
        Objects.equals(this.share, webhookV2EventData.share) &&
        Objects.equals(this.transferStatus, webhookV2EventData.transferStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resources, formDetails, share, transferStatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebhookV2EventData {\n");
    
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    formDetails: ").append(toIndentedString(formDetails)).append("\n");
    sb.append("    share: ").append(toIndentedString(share)).append("\n");
    sb.append("    transferStatus: ").append(toIndentedString(transferStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
