/*
 * ExaVault API
 * See our API reference documentation at https://www.exavault.com/developer/api-docs/
 *
 * OpenAPI spec version: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.exavault.client.api;

import com.exavault.client.ApiException;
import org.threeten.bp.OffsetDateTime;
import com.exavault.client.model.SessionActivityResponse;
import com.exavault.client.model.WebhooksActivityResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ActivityApi
 */
@Ignore
public class ActivityApiTest {

    private final ActivityApi api = new ActivityApi();

    /**
     * Get activity logs
     *
     * Returns the detailed activity logs for your account. Optional query paramaters will filter the returned results based on a number of options including usernames, activity types, or date ranges.     **Operation Types** Session activity is logged with an operation type that is different from what is visible through the [activity log interface in the web file manager](/docs/account/10-activity-logs/00-activity-logs). Consult the table below to compare the two:  | File Manager Value | API Value | Notes | |-----|----|---| | Connect | PASS | | | Disconnect | EXIT | | | Upload | STOR | | | Download | RETR | | | Delete | DELE | | | Create Folder | MKD | | | Rename | RNTO | | | Move | MOVE | | | Copy | COPY | | | Compress | COMPR | | | Extract | EXTRACT | | | Shared Folders | SHARE | | | Send Files | SEND | | | Receive Files | RECV | | | _N/A_ | EDIT\\_SEND | Update send. Not shown in file manager | | Update Share | EDIT\\_SHARE| |  | Update Receive | EDIT\\_RECV | | | Delete Send | DELE\\_SEND | | | Delete Receive | DELE\\_RECV | | | Delete Share | DELE\\_SHARE | | | Create Notification | NOTIFY | | | Update Notification | EDIT\\_NTFY| | | Delete Notification | DELE\\_NTFY | | | Create User | USER | | | Update User | EDIT\\_USER | | | Delete User | DELE\\_USER | | | _N/A_ | DFA | Create direct link. Not shown in file manager | | _N/A_ | EDIT\\_DFA | Update direct link options. Not shown in file manager | | _N/A_ | DELE\\_DFA | Deactivate direct link. Not shown in file manager| 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSessionLogsTest() throws ApiException {
        String evApiKey = null;
        String evAccessToken = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String ipAddress = null;
        String username = null;
        String path = null;
        String type = null;
        Integer offset = null;
        Integer limit = null;
        String sort = null;
        SessionActivityResponse response = api.getSessionLogs(evApiKey, evAccessToken, startDate, endDate, ipAddress, username, path, type, offset, limit, sort);

        // TODO: test validations
    }
    /**
     * Get webhook logs
     *
     * Returns the webhook logs for your account. Optional query paramaters will filter the returned results based on a number of options including path, tpye of event, or status code.   **Event Types**  Webhooks are triggered by enabled event types for your account, which are configured on the [developer settings page](/docs/account/09-settings/06-developer-settings). These are the valid options for event types:  - Upload - Download - Delete File - Delete Folder - Create Folder - Rename - Move - Copy - Compress - Extract - Share Folder - Send Files - Receive Files - Update Share - Update Receive - Delete Send - Delete Receive - Delete Share - Create Notification - Update Notification - Delete Notification - Create User - Update User  - Delete User - Connect - Disconnect
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getWebhookLogsTest() throws ApiException {
        String evApiKey = null;
        String evAccessToken = null;
        String event = null;
        Integer statusCode = null;
        String path = null;
        String username = null;
        Integer offset = null;
        Integer limit = null;
        String sort = null;
        WebhooksActivityResponse response = api.getWebhookLogs(evApiKey, evAccessToken, event, statusCode, path, username, offset, limit, sort);

        // TODO: test validations
    }
}
